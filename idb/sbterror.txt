[info] Loading project definition from C:\Users\Mirko\Projekte\sae\idb\project
[info] Set current project to idb (in build file:/C:/Users/Mirko/Projekte/sae/idb/)
[info] Passed: Total 0, Failed 0, Errors 0, Passed 0
[info] No tests to run for idb/test:test
[info] Passed: Total 0, Failed 0, Errors 0, Passed 0
[info] No tests to run for idb-annotations/test:test
[info] Passed: Total 0, Failed 0, Errors 0, Passed 0
[info] No tests to run for idb-schema-examples/test:test
[info] Test idb.lms.extensions.functions.TestFunctionsExpDynamicLambda.testLambda2Param ignored
[info] Passed: Total 3, Failed 0, Errors 0, Passed 3
[info] Test idb.lms.extensions.reduction.TestTupleOpsReduction.testTuple2ReduceFunComposeThenEqTest ignored
[info] Test idb.lms.extensions.reduction.TestTupleOpsReduction.testTuple2ReduceDirectConditional ignored
[info] Test idb.lms.extensions.reduction.TestTupleOpsReduction.testTuple2ReduceFunComposeThenDirect ignored
[info] Test idb.algebra.opt.TestIROptFusion.testSelectionFusionTypingWithSame ignored
[info] Passed: Total 74, Failed 0, Errors 0, Passed 69, Skipped 5
[info] Test idb.syntax.iql.TestExistsClauses2.testExistsWithMultipleInterleavedOuterConjunctions ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testNotExistsWithMultipleInterleavedOuterConjunctions ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testNotExists ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testExistsWithMultipleOuterConjunctions ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testExistsWithOneOuterConjunction ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testNotExistsWithMultipleOuterConjunctions ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testNotExistsWithOneOuterConjunction ignored
[info] Test idb.syntax.iql.TestExistsClauses2.testExists ignored
[info] Test idb.syntax.iql.TestBasicClauseOptimizations.testLocalIncrementJoin ignored
[info] Test idb.syntax.iql.TestBasicClauseOptimizations.testPropagateFilterToLeftViaJoin ignored
[info] Test idb.syntax.iql.TestBasicClauseOptimizations.testPropagateFilterToRightViaJoin ignored
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged$0 extends ((idb.schema.university.Student)=>(Boolean)) {
def apply(x5:idb.schema.university.Student): Boolean = {
val x6 = x5.firstName
val x7 = x6 == "Sally"
x7
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged$0 extends ((scala.Tuple2[idb.schema.university.Student, java.lang.String])=>(Boolean)) {
def apply(x5:scala.Tuple2[idb.schema.university.Student, java.lang.String]): Boolean = {
val x7 = x5._2
val x6 = x5._1
val x8 = x6.firstName
val x9 = x8 == x7
x9
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

<stdin>:4: error: not found: value idb
class staged$0 extends ((idb.schema.university.Student)=>(Boolean)) {
                         ^
<stdin>:4: error: not found: value idb
class staged$0 extends ((scala.Tuple2[idb.schema.university.Student, java.lang.String])=>(Boolean)) {
                                      ^
<stdin>:5: error: not found: value idb
def apply(x5:idb.schema.university.Student): Boolean = {
             ^
<stdin>:5: error: not found: value idb
def apply(x5:scala.Tuple2[idb.schema.university.Student, java.lang.String]): Boolean = {
                          ^
[error] Test idb.algebra.compiler.TestIRGenBasicOperatorsAsIncremental.testConstructSelection failed: java.lang.ClassNotFoundException: staged$0
[error]     at scala.tools.nsc.interpreter.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:69)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunction(CompileScalaExt.scala:105)
[error]     at idb.algebra.compiler.TestIRGenBasicOperatorsAsIncremental$$anon$2.compileFunction(TestIRGenBasicOperatorsAsIncremental.scala:70)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunctionWithDynamicManifests(CompileScalaExt.scala:67)
[error]     at idb.algebra.compiler.TestIRGenBasicOperatorsAsIncremental$$anon$2.compileFunctionWithDynamicManifests(TestIRGenBasicOperatorsAsIncremental.scala:70)
[error]     at idb.algebra.compiler.RelationalAlgebraGenBasicOperatorsAsIncremental$class.compile(RelationalAlgebraGenBasicOperatorsAsIncremental.scala:67)
[error]     at idb.algebra.compiler.TestIRGenBasicOperatorsAsIncremental$$anon$2.compile(TestIRGenBasicOperatorsAsIncremental.scala:70)
[error]     at idb.algebra.compiler.TestIRGenBasicOperatorsAsIncremental.testConstructSelection(TestIRGenBasicOperatorsAsIncremental.scala:77)
[error]     ...
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged$0 extends ((idb.schema.university.Student)=>(Boolean)) {
def apply(x0:idb.schema.university.Student): Boolean = {
val x1 = x0.firstName
val x2 = x1 == "Sally"
x2
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

<stdin>:4: error: not found: value idb
class staged$0 extends ((idb.schema.university.Student)=>(Boolean)) {
                         ^
<stdin>:5: error: not found: value idb
def apply(x0:idb.schema.university.Student): Boolean = {
             ^
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged$0 extends ((idb.schema.university.Student)=>(java.lang.String)) {
def apply(x4:idb.schema.university.Student): java.lang.String = {
val x5 = x4.matriculationNumber
val x6 = (x5).toString()
x6
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

<stdin>:4: error: not found: value idb
class staged$0 extends ((idb.schema.university.Student)=>(java.lang.String)) {
                         ^
<stdin>:5: error: not found: value idb
def apply(x4:idb.schema.university.Student): java.lang.String = {
             ^
two errors found
compilation: had errors
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged$0 extends ((scala.Tuple2[idb.schema.university.Student, java.lang.String])=>(Boolean)) {
def apply(x5:scala.Tuple2[idb.schema.university.Student, java.lang.String]): Boolean = {
val x7 = x5._2
val x6 = x5._1
val x8 = x6.firstName
val x9 = x8 == x7
x9
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

<stdin>:4: error: not found: value idb
class staged$0 extends ((scala.Tuple2[idb.schema.university.Student, java.lang.String])=>(Boolean)) {
                                      ^
<stdin>:5: error: not found: value idb
def apply(x5:scala.Tuple2[idb.schema.university.Student, java.lang.String]): Boolean = {
                          ^
/*****************************************
  Emitting Generated Code                  
*******************************************/
class staged$0 extends ((idb.schema.university.Student)=>(Boolean)) {
def apply(x4:idb.schema.university.Student): Boolean = {
val x5 = x4.firstName
val x6 = x5 == "Sally"
x6
}
}
/*****************************************
  End of Generated Code                  
*******************************************/

<stdin>:4: error: not found: value idb
class staged$0 extends ((idb.schema.university.Student)=>(Boolean)) {
                         ^
<stdin>:5: error: not found: value idb
def apply(x4:idb.schema.university.Student): Boolean = {
             ^
two errors found
compilation: had errors
[error] Test idb.lms.extensions.TestCompileScalaExt.testCompileFunction2 failed: java.lang.ClassNotFoundException: staged$0
[error]     at scala.tools.nsc.interpreter.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:69)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunction(CompileScalaExt.scala:105)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$6.compileFunction(TestCompileScalaExt.scala:95)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunctionApplied(CompileScalaExt.scala:49)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$6.compileFunctionApplied(TestCompileScalaExt.scala:95)
[error]     at idb.lms.extensions.TestCompileScalaExt.testCompileFunction2(TestCompileScalaExt.scala:102)
[error]     ...
[error] Test idb.lms.extensions.TestCompileScalaExt.testCompileFunction1 failed: java.lang.ClassNotFoundException: staged$0
[error]     at scala.tools.nsc.interpreter.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:69)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunction(CompileScalaExt.scala:105)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$8.compileFunction(TestCompileScalaExt.scala:65)
[error]     at idb.lms.extensions.TestCompileScalaExt.testCompileFunction1(TestCompileScalaExt.scala:72)
[error]     ...
[error] Test idb.lms.extensions.TestCompileScalaExt.testCompileExplicitToString failed: java.lang.ClassNotFoundException: staged$0
[error]     at scala.tools.nsc.interpreter.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:69)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunction(CompileScalaExt.scala:105)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$10.compileFunction(TestCompileScalaExt.scala:182)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunctionWithDynamicManifests(CompileScalaExt.scala:67)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$10.compileFunctionWithDynamicManifests(TestCompileScalaExt.scala:182)
[error]     at idb.lms.extensions.TestCompileScalaExt.testCompileExplicitToString(TestCompileScalaExt.scala:189)
[error]     ...
[error] Test idb.lms.extensions.TestCompileScalaExt.testCompileFunction2WithDynamicManifests failed: java.lang.ClassNotFoundException: staged$0
[error]     at scala.tools.nsc.interpreter.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:69)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunction(CompileScalaExt.scala:105)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$7.compileFunction(TestCompileScalaExt.scala:154)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunctionWithDynamicManifests(CompileScalaExt.scala:67)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$7.compileFunctionWithDynamicManifests(TestCompileScalaExt.scala:154)
[error]     at idb.lms.extensions.TestCompileScalaExt.testCompileFunction2WithDynamicManifests(TestCompileScalaExt.scala:161)
[error]     ...
[error] Test idb.lms.extensions.TestCompileScalaExt.testCompileFunction1WithDynamicManifests failed: java.lang.ClassNotFoundException: staged$0
[error]     at scala.tools.nsc.interpreter.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:69)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at java.lang.ClassLoader.loadClass(Unknown Source)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunction(CompileScalaExt.scala:105)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$9.compileFunction(TestCompileScalaExt.scala:124)
[error]     at idb.lms.extensions.CompileScalaExt$class.compileFunctionWithDynamicManifests(CompileScalaExt.scala:67)
[error]     at idb.lms.extensions.TestCompileScalaExt$$anon$9.compileFunctionWithDynamicManifests(TestCompileScalaExt.scala:124)
[error]     at idb.lms.extensions.TestCompileScalaExt.testCompileFunction1WithDynamicManifests(TestCompileScalaExt.scala:131)
[error]     ...
[error] Failed: Total 7, Failed 6, Errors 0, Passed 1
[error] Failed tests:
[error] 	idb.lms.extensions.TestCompileScalaExt
[error] 	idb.algebra.compiler.TestIRGenBasicOperatorsAsIncremental
[error] Test idb.syntax.iql.TestAggregateClauses2.testGrouping failed: java.lang.NullPointerException: null
[error]     at scala.virtualization.lms.internal.Effects$class.summarizeAll(Effects.scala:505)
[error]     at idb.syntax.iql.IR$.summarizeAll(IR.scala:53)
[error]     at scala.virtualization.lms.internal.Effects$class.reifyEffects(Effects.scala:527)
[error]     at idb.syntax.iql.IR$.reifyEffects(IR.scala:53)
[error]     at scala.virtualization.lms.common.FunctionsExp$class.doLambdaDef(Functions.scala:80)
[error]     at idb.syntax.iql.IR$.doLambdaDef(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$$anonfun$doLambda$1.apply(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$$anonfun$doLambda$1.apply(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:122)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at scala.virtualization.lms.common.TupledFunctions$class.fun(Functions.scala:29)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.FromClause2.GROUP(FromClause2.scala:30)
[error]     at idb.syntax.iql.TestAggregateClauses2.testGrouping(TestAggregateClauses2.scala:50)
[error]     ...
[error] Test idb.syntax.iql.TestAggregateClauses2.testJoin2AggregateGroup1 failed: assertion failed: already defined: List(TP(Sym(101),Lambda(<function1>,Sym(100),Block(Sym(100)))), TP(Sym(102),Field(Sym(99),title,java.lang.String)), TP(Sym(110),Lambda(<function1>,Sym(103),Block(Sym(108))))) for List(TP(Sym(101),Lambda(<function1>,Sym(100),Block(Sym(100)))), TP(Sym(102),Field(Sym(99),title,java.lang.String)), TP(Sym(110),Lambda(<function1>,Sym(103),Block(Sym(108)))), TP(Sym(115),Equal(Sym(114),Const(Sally))), TP(Sym(116),BooleanAnd(Sym(112),Sym(115))), TP(Sym(117),Field(Sym(99),creditPoints,Int)), TP(Sym(118),Lambda(<function1>,Sym(46),Block(Sym(59)))), TP(Sym(119),OrderingGT(Sym(117),Const(4))), TP(Sym(120),Lambda(<function1>,Sym(111),Block(Sym(119)))), TP(Sym(121),BooleanAnd(Sym(116),Sym(119))), TP(Sym(122),Field(Sym(97),lastName,java.lang.String)), TP(Sym(123),Equal(Sym(122),Const(Fields))), TP(Sym(124),BooleanAnd(Sym(121),Sym(123))), TP(Sym(125),Field(Sym(98),studentMatriculationNumber,Int)))
[error] Test idb.syntax.iql.TestAggregateClauses2.testJoin2SumCreditPoints failed: assertion failed: already defined: List(TP(Sym(170),Tuple3Access2(Sym(166))), TP(Sym(171),Lambda(<function1>,Sym(169),Block(Sym(169))))) for List(TP(Sym(170),Tuple3Access2(Sym(166))), TP(Sym(171),Lambda(<function1>,Sym(169),Block(Sym(169)))), TP(Sym(177),NumericPlus(Sym(172),Sym(174))), TP(Sym(178),Lambda(<function1>,UnboxedTuple(List(Sym(168), Sym(172))),Block(Sym(177)))), TP(Sym(179),Tuple2Access1(Sym(175))), TP(Sym(180),Tuple2Access2(Sym(175))), TP(Sym(214),NumericMinus(Sym(208),Sym(213))), TP(Sym(216),Tuple2Access1(Sym(207))), TP(Sym(217),Field(Sym(215),lastName,java.lang.String)), TP(Sym(218),Lambda(<function1>,Sym(215),Block(Sym(217)))), TP(Sym(219),Tuple2Access2(Sym(207))), TP(Sym(220),Lambda(<function1>,Sym(169),Block(Sym(169)))), TP(Sym(221),Field(Sym(219),creditPoints,Int)), TP(Sym(222),ExistsCondition(WhereClause1(Sym(202),FromClause1(QueryExtent(idb.BagExtent@7593a175,false,false,false),SelectProjectionClause(Sym(87),false))))), TP(Sym(223),NumericPlus(Sym(214),Sym(221))), TP(Sym(224),Lambda(<function1>,Sym(181),Block(Sym(222)))), TP(Sym(225),Reify(Sym(223),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(166)))), TP(Sym(226),Lambda(<function1>,UnboxedTuple(List(Sym(206), Sym(207), Sym(208))),Block(Sym(225)))), TP(Sym(227),Grouping(QueryExtent(idb.BagExtent@3c756182,false,false,false),Sym(218))), TP(Sym(228),Lambda(<function1>,UnboxedTuple(List(Sym(206), Sym(207), Sym(208))),Block(Sym(225)))))
[info] Test idb.syntax.iql.TestExistsClauses1.testExistsWithMultipleInterleavedOuterConjunctions ignored
[info] Test idb.syntax.iql.TestExistsClauses1.testNotExistsWithMultipleInterleavedOuterConjunctions ignored
[error] Test idb.syntax.iql.TestExistsClauses1.testNotExists failed: scala.MatchError: TP(Sym(10),Lambda(<function1>,Sym(0),Block(Sym(0)))) (of class scala.virtualization.lms.internal.Expressions$TP)
[error]     at scala.PartialFunction$$anon$1.apply(PartialFunction.scala:248)
[error]     at scala.PartialFunction$$anon$1.apply(PartialFunction.scala:246)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$getFirstEquivalentDefinitionExp$1.applyOrElse(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$getFirstEquivalentDefinitionExp$1.applyOrElse(BaseExpAlphaEquivalence.scala:138)
[error]     at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:33)
[error]     at scala.collection.TraversableOnce$$anonfun$collectFirst$1.apply(TraversableOnce.scala:133)
[error]     at scala.collection.TraversableOnce$$anonfun$collectFirst$1.apply(TraversableOnce.scala:131)
[error]     at scala.collection.Iterator$class.foreach(Iterator.scala:727)
[error]     at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
[error]     at scala.collection.TraversableOnce$class.collectFirst(TraversableOnce.scala:131)
[error]     at scala.collection.AbstractTraversable.collectFirst(Traversable.scala:105)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.getFirstEquivalentDefinitionExp(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.syntax.iql.IR$.getFirstEquivalentDefinitionExp(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:123)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:52)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:43)
[error]     at idb.syntax.iql.TestExistsClauses1.testNotExists(TestExistsClauses1.scala:204)
[error]     ...
[error] Test idb.syntax.iql.TestExistsClauses1.testExistsWithMultipleOuterConjunctions failed: assertion failed: already defined: List(TP(Sym(28),Lambda(<function1>,Sym(27),Block(Sym(27)))), TP(Sym(29),Field(Sym(13),comment,java.lang.String)), TP(Sym(30),StringPlus(Sym(22),Sym(29)))) for List(TP(Sym(28),Lambda(<function1>,Sym(27),Block(Sym(27)))), TP(Sym(29),Field(Sym(13),comment,java.lang.String)), TP(Sym(30),StringPlus(Sym(22),Sym(29))), TP(Sym(23),NumericMinus(Sym(21),Const(1))), TP(Sym(22),Field(Sym(12),lastName,java.lang.String)), TP(Sym(24),Lambda(<function1>,UnboxedTuple(List(Sym(20), Sym(21))),Block(Sym(23)))), TP(Sym(41),Lambda(<function1>,UnboxedTuple(List(Sym(7), Sym(8))),Block(UnboxedTuple(List(Sym(7), Sym(8)))))), TP(Sym(76),Lambda(<function1>,Sym(74),Block(Sym(74)))))
[error] Test idb.syntax.iql.TestExistsClauses1.testExistsWithOneOuterConjunction failed: java.lang.NullPointerException: null
[error]     at scala.virtualization.lms.internal.Effects$class.summarizeAll(Effects.scala:505)
[error]     at idb.syntax.iql.IR$.summarizeAll(IR.scala:53)
[error]     at scala.virtualization.lms.internal.Effects$class.reifyEffects(Effects.scala:527)
[error]     at idb.syntax.iql.IR$.reifyEffects(IR.scala:53)
[error]     at scala.virtualization.lms.common.FunctionsExp$class.doLambdaDef(Functions.scala:80)
[error]     at idb.syntax.iql.IR$.doLambdaDef(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$$anonfun$doLambda$1.apply(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$$anonfun$doLambda$1.apply(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:122)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.FromClause1.WHERE(FromClause1.scala:26)
[error]     at idb.syntax.iql.TestExistsClauses1.testExistsWithOneOuterConjunction(TestExistsClauses1.scala:78)
[error]     ...
[info] Test idb.syntax.iql.TestExistsClauses1.testNotExistsWithMultipleOuterConjunctions ignored
[error] Test idb.syntax.iql.TestExistsClauses1.testNotExistsWithOneOuterConjunction failed: assertion failed: already defined: List(TP(Sym(17),Lambda(<function1>,UnboxedTuple(List(Sym(1), Sym(2))),Block(Sym(15)))), TP(Sym(18),Lambda(<function1>,Sym(6),Block(Sym(6)))), TP(Sym(19),Lambda(<function1>,Sym(6),Block(Sym(6)))), TP(Sym(34),Lambda(<function1>,UnboxedTuple(List(Sym(31), Sym(32), Sym(33))),Block(UnboxedTuple(List(Sym(31), Sym(32), Sym(33)))))), TP(Sym(36),Lambda(<function1>,Sym(35),Block(Sym(35)))), TP(Sym(45),Lambda(<function1>,UnboxedTuple(List(Sym(42), Sym(43), Sym(44))),Block(UnboxedTuple(List(Sym(42), Sym(43), Sym(44)))))), TP(Sym(54),Field(Sym(49),title,java.lang.String)), TP(Sym(55),Field(Sym(53),lastName,java.lang.String)), TP(Sym(56),StringPlus(Sym(51),Sym(54))), TP(Sym(57),Lambda(<function1>,UnboxedTuple(List(Sym(48), Sym(49))),Block(Sym(56)))), TP(Sym(58),Equal(Sym(55),Const(Fields))), TP(Sym(59),Field(Sym(46),matriculationNumber,Int)), TP(Sym(60),Field(Sym(47),studentMatriculationNumber,Int)), TP(Sym(61),Equal(Sym(59),Sym(60))), TP(Sym(62),Lambda(<function1>,UnboxedTuple(List(Sym(46), Sym(47))),Block(Sym(61)))), TP(Sym(63),CrossProduct(QueryExtent(idb.BagExtent@3c756182,false,false,false),QueryExtent(idb.BagExtent@b98dcb3,false,true,false))), TP(Sym(64),Grouping(Sym(63),Sym(57))), TP(Sym(65),Field(Sym(53),firstName,java.lang.String)), TP(Sym(66),Equal(Sym(65),Const(Sally))), TP(Sym(67),BooleanNegate(Sym(66))), TP(Sym(70),BooleanAnd(Sym(58),Sym(67))), TP(Sym(71),Field(Sym(68),lastName,java.lang.String)), TP(Sym(72),Lambda(<function1>,UnboxedTuple(List(Sym(68), Sym(69))),Block(Sym(71)))), TP(Sym(73),CrossProduct(QueryExtent(idb.BagExtent@3c756182,false,false,false),QueryExtent(idb.BagExtent@7593a175,false,false,false))), TP(Sym(82),NumericPlus(Sym(80),Const(1))), TP(Sym(83),Lambda(<function1>,UnboxedTuple(List(Sym(79), Sym(80))),Block(Sym(82)))), TP(Sym(84),Field(Sym(81),lastName,java.lang.String)), TP(Sym(85),Equal(Sym(84),Const(Fields))), TP(Sym(87),Lambda(<function1>,Sym(86),Block(Sym(86)))), TP(Sym(90),NumericMinus(Sym(89),Const(1))), TP(Sym(91),Lambda(<function1>,UnboxedTuple(List(Sym(88), Sym(89))),Block(Sym(90)))), TP(Sym(95),Lambda(<function1>,UnboxedTuple(List(Sym(92), Sym(93), Sym(94))),Block(Sym(94)))), TP(Sym(96),AggregationSelfMaintainedWithoutGrouping(QueryExtent(idb.BagExtent@3c756182,false,false,false),0,Sym(83),Sym(91),Sym(95))), TP(Sym(109),Equal(Sym(107),Const(This is an introductory Course))), TP(Sym(108),Equal(Sym(104),Sym(106))), TP(Sym(112),BooleanAnd(Sym(105),Sym(109))), TP(Sym(113),Field(Sym(111),matriculationNumber,Int)), TP(Sym(114),Field(Sym(97),firstName,java.lang.String)), TP(Sym(126),Lambda(<function1>,Sym(111),Block(Sym(119)))), TP(Sym(127),OrderingGT(Sym(125),Const(100000))), TP(Sym(128),BooleanAnd(Sym(124),Sym(127))), TP(Sym(129),Lambda(<function1>,UnboxedTuple(List(Sym(97), Sym(98), Sym(99))),Block(Sym(128)))), TP(Sym(130),ExistsCondition(WhereClause1(Sym(110),FromClause1(QueryExtent(idb.BagExtent@7593a175,false,false,false),SelectProjectionClause(Sym(87),false))))), TP(Sym(131),BooleanAnd(Sym(85),Sym(130))), TP(Sym(134),CrossProduct(Sym(73),QueryExtent(idb.BagExtent@b98dcb3,false,true,false))), TP(Sym(138),Tuple2Access1(Sym(135))), TP(Sym(139),Field(Sym(137),lastName,java.lang.String)), TP(Sym(140),Tuple2Access2(Sym(135))), TP(Sym(141),Equal(Sym(139),Const(Fields))), TP(Sym(146),Lambda(<function1>,UnboxedTuple(List(Sym(135), Sym(136))),Block(Sym(144)))), TP(Sym(147),Projection(Sym(134),Sym(145))), TP(Sym(148),Lambda(<function1>,UnboxedTuple(List(Sym(97), Sym(98), Sym(99))),Block(Sym(124))))) for List(TP(Sym(17),Lambda(<function1>,UnboxedTuple(List(Sym(1), Sym(2))),Block(Sym(15)))), TP(Sym(18),Lambda(<function1>,Sym(6),Block(Sym(6)))), TP(Sym(19),Lambda(<function1>,Sym(6),Block(Sym(6)))), TP(Sym(34),Lambda(<function1>,UnboxedTuple(List(Sym(31), Sym(32), Sym(33))),Block(UnboxedTuple(List(Sym(31), Sym(32), Sym(33)))))), TP(Sym(36),Lambda(<function1>,Sym(35),Block(Sym(35)))), TP(Sym(45),Lambda(<function1>,UnboxedTuple(List(Sym(42), Sym(43), Sym(44))),Block(UnboxedTuple(List(Sym(42), Sym(43), Sym(44)))))), TP(Sym(54),Field(Sym(49),title,java.lang.String)), TP(Sym(55),Field(Sym(53),lastName,java.lang.String)), TP(Sym(56),StringPlus(Sym(51),Sym(54))), TP(Sym(57),Lambda(<function1>,UnboxedTuple(List(Sym(48), Sym(49))),Block(Sym(56)))), TP(Sym(58),Equal(Sym(55),Const(Fields))), TP(Sym(59),Field(Sym(46),matriculationNumber,Int)), TP(Sym(60),Field(Sym(47),studentMatriculationNumber,Int)), TP(Sym(61),Equal(Sym(59),Sym(60))), TP(Sym(62),Lambda(<function1>,UnboxedTuple(List(Sym(46), Sym(47))),Block(Sym(61)))), TP(Sym(63),CrossProduct(QueryExtent(idb.BagExtent@3c756182,false,false,false),QueryExtent(idb.BagExtent@b98dcb3,false,true,false))), TP(Sym(64),Grouping(Sym(63),Sym(57))), TP(Sym(65),Field(Sym(53),firstName,java.lang.String)), TP(Sym(66),Equal(Sym(65),Const(Sally))), TP(Sym(67),BooleanNegate(Sym(66))), TP(Sym(70),BooleanAnd(Sym(58),Sym(67))), TP(Sym(71),Field(Sym(68),lastName,java.lang.String)), TP(Sym(72),Lambda(<function1>,UnboxedTuple(List(Sym(68), Sym(69))),Block(Sym(71)))), TP(Sym(73),CrossProduct(QueryExtent(idb.BagExtent@3c756182,false,false,false),QueryExtent(idb.BagExtent@7593a175,false,false,false))), TP(Sym(82),NumericPlus(Sym(80),Const(1))), TP(Sym(83),Lambda(<function1>,UnboxedTuple(List(Sym(79), Sym(80))),Block(Sym(82)))), TP(Sym(84),Field(Sym(81),lastName,java.lang.String)), TP(Sym(85),Equal(Sym(84),Const(Fields))), TP(Sym(87),Lambda(<function1>,Sym(86),Block(Sym(86)))), TP(Sym(90),NumericMinus(Sym(89),Const(1))), TP(Sym(91),Lambda(<function1>,UnboxedTuple(List(Sym(88), Sym(89))),Block(Sym(90)))), TP(Sym(95),Lambda(<function1>,UnboxedTuple(List(Sym(92), Sym(93), Sym(94))),Block(Sym(94)))), TP(Sym(96),AggregationSelfMaintainedWithoutGrouping(QueryExtent(idb.BagExtent@3c756182,false,false,false),0,Sym(83),Sym(91),Sym(95))), TP(Sym(109),Equal(Sym(107),Const(This is an introductory Course))), TP(Sym(108),Equal(Sym(104),Sym(106))), TP(Sym(112),BooleanAnd(Sym(105),Sym(109))), TP(Sym(113),Field(Sym(111),matriculationNumber,Int)), TP(Sym(114),Field(Sym(97),firstName,java.lang.String)), TP(Sym(126),Lambda(<function1>,Sym(111),Block(Sym(119)))), TP(Sym(127),OrderingGT(Sym(125),Const(100000))), TP(Sym(128),BooleanAnd(Sym(124),Sym(127))), TP(Sym(129),Lambda(<function1>,UnboxedTuple(List(Sym(97), Sym(98), Sym(99))),Block(Sym(128)))), TP(Sym(130),ExistsCondition(WhereClause1(Sym(110),FromClause1(QueryExtent(idb.BagExtent@7593a175,false,false,false),SelectProjectionClause(Sym(87),false))))), TP(Sym(131),BooleanAnd(Sym(85),Sym(130))), TP(Sym(134),CrossProduct(Sym(73),QueryExtent(idb.BagExtent@b98dcb3,false,true,false))), TP(Sym(138),Tuple2Access1(Sym(135))), TP(Sym(139),Field(Sym(137),lastName,java.lang.String)), TP(Sym(140),Tuple2Access2(Sym(135))), TP(Sym(141),Equal(Sym(139),Const(Fields))), TP(Sym(146),Lambda(<function1>,UnboxedTuple(List(Sym(135), Sym(136))),Block(Sym(144)))), TP(Sym(147),Projection(Sym(134),Sym(145))), TP(Sym(148),Lambda(<function1>,UnboxedTuple(List(Sym(97), Sym(98), Sym(99))),Block(Sym(124)))), TP(Sym(160),Tuple2Access1(Sym(157))), TP(Sym(159),Equal(Sym(155),Sym(156))), TP(Sym(161),Lambda(<function1>,Sym(154),Block(Sym(159)))), TP(Sym(162),Tuple2Access2(Sym(157))), TP(Sym(163),Field(Sym(162),creditPoints,Int)), TP(Sym(164),NumericPlus(Sym(158),Sym(163))), TP(Sym(165),Lambda(<function1>,UnboxedTuple(List(Sym(157), Sym(158))),Block(Sym(164)))))
[error] Test idb.syntax.iql.TestExistsClauses1.testExists failed: assertion failed: already defined: List(TP(Sym(151),Lambda(<function1>,Sym(149),Block(Sym(150))))) for List(TP(Sym(151),Lambda(<function1>,Sym(149),Block(Sym(150)))), TP(Sym(291),Lambda(<function1>,Sym(286),Block(Sym(289)))))
[info] Test idb.syntax.iql.TestExistsClauses1.testMultipleExists ignored
[error] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3 failed: assertion failed: already defined: List(TP(Sym(14),DuplicateElimination(QueryExtent(idb.BagExtent@3c756182,false,false,false))), TP(Sym(15),NumericPlus(Sym(2),Const(1))), TP(Sym(16),ETuple3(Sym(3),Sym(4),Sym(5)))) for List(TP(Sym(14),DuplicateElimination(QueryExtent(idb.BagExtent@3c756182,false,false,false))), TP(Sym(15),NumericPlus(Sym(2),Const(1))), TP(Sym(16),ETuple3(Sym(3),Sym(4),Sym(5))))
[info] Test idb.syntax.iql.TestBasicClauses3.testJoin3On1stAnd2nd ignored
[error] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1st failed: assertion failed: already defined: List(TP(Sym(40),Lambda(<function1>,UnboxedTuple(List(Sym(37), Sym(38), Sym(39))),Block(Sym(39))))) for List(TP(Sym(26),Lambda(<function1>,Sym(25),Block(Sym(25)))), TP(Sym(40),Lambda(<function1>,UnboxedTuple(List(Sym(37), Sym(38), Sym(39))),Block(Sym(39)))))
[info] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1stAnd2ndAnd3ndCombined ignored
[error] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1stAnd2ndAnd3rdInterleaved failed: assertion failed: already defined: List(TP(Sym(244),Lambda(<function1>,UnboxedTuple(List(Sym(241), Sym(242), Sym(243))),Block(Sym(243)))), TP(Sym(174),Field(Sym(168),creditPoints,Int)), TP(Sym(287),Field(Sym(286),firstName,java.lang.String)), TP(Sym(288),Field(Sym(286),lastName,java.lang.String))) for List(TP(Sym(244),Lambda(<function1>,UnboxedTuple(List(Sym(241), Sym(242), Sym(243))),Block(Sym(243)))), TP(Sym(174),Field(Sym(168),creditPoints,Int)), TP(Sym(287),Field(Sym(286),firstName,java.lang.String)), TP(Sym(288),Field(Sym(286),lastName,java.lang.String)), TP(Sym(289),ETuple2(Sym(287),Sym(288))), TP(Sym(290),Lambda(<function1>,Sym(286),Block(Sym(289)))))
[info] Test idb.syntax.iql.TestBasicClauses3.testJoin3On1stAnd2ndPlusOn2ndAnd3rd ignored
[info] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1stAnd2ndCombined ignored
[error] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1stAnd2ndAnd3rd failed: java.lang.IllegalArgumentException: Sym(319) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:217)
[error]     at idb.syntax.iql.package$.plan(package.scala:147)
[error]     at idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1stAnd2ndAnd3rd(TestBasicClauses3.scala:134)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses3.testCrossProduct3Selection1stAnd2nd failed: assertion failed: already defined: List(TP(Sym(360),Projection(Sym(134),Sym(342))), TP(Sym(361),NumericMinus(Sym(359),Const(1))), TP(Sym(362),Lambda(<function1>,UnboxedTuple(List(Sym(358), Sym(359))),Block(Sym(361))))) for List(TP(Sym(360),Projection(Sym(134),Sym(342))), TP(Sym(361),NumericMinus(Sym(359),Const(1))), TP(Sym(362),Lambda(<function1>,UnboxedTuple(List(Sym(358), Sym(359))),Block(Sym(361)))), TP(Sym(390),Field(Sym(379),comment,java.lang.String)), TP(Sym(393),Lambda(<function1>,UnboxedTuple(List(Sym(391), Sym(392))),Block(UnboxedTuple(List(Sym(391), Sym(392)))))), TP(Sym(394),Equal(Sym(390),Const(This is an introductory Course))), TP(Sym(395),BooleanAnd(Sym(387),Sym(394))))
[info] Test idb.syntax.iql.TestBasicClauses1.testSelection1Negate ignored
[error] Test idb.syntax.iql.TestBasicClauses1.testDistinctExtent failed: java.lang.IllegalArgumentException: Unknown relation: Sym(14)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBase$class.quoteRelation(RelationalAlgebraPrintPlanBase.scala:68)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanBasicOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBasicOperators$class.quoteRelation(RelationalAlgebraPrintPlanBasicOperators.scala:124)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanAggregationOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanAggregationOperators$class.quoteRelation(RelationalAlgebraPrintPlanAggregationOperators.scala:136)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanSetTheoryOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanSetTheoryOperators$class.quoteRelation(RelationalAlgebraPrintPlanSetTheoryOperators.scala:85)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanRecursiveOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanRecursiveOperators$class.quoteRelation(RelationalAlgebraPrintPlanRecursiveOperators.scala:74)
[error]     at idb.syntax.iql.TestUtil$.quoteRelation(TestUtil.scala:43)
[error]     at idb.syntax.iql.TestUtil$.assertEqualStructure(TestUtil.scala:53)
[error]     at idb.syntax.iql.TestBasicClauses1.testDistinctExtent(TestBasicClauses1.scala:197)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses1.testSelection1ProjectTupleFun failed: java.lang.IllegalArgumentException: Unknown relation: Sym(280)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBase$class.quoteRelation(RelationalAlgebraPrintPlanBase.scala:68)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanBasicOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBasicOperators$class.quoteRelation(RelationalAlgebraPrintPlanBasicOperators.scala:124)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanAggregationOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanAggregationOperators$class.quoteRelation(RelationalAlgebraPrintPlanAggregationOperators.scala:136)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanSetTheoryOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanSetTheoryOperators$class.quoteRelation(RelationalAlgebraPrintPlanSetTheoryOperators.scala:85)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanRecursiveOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanRecursiveOperators$class.quoteRelation(RelationalAlgebraPrintPlanRecursiveOperators.scala:74)
[error]     at idb.syntax.iql.TestUtil$.quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBasicOperators$$anonfun$quoteRelation$2.apply(RelationalAlgebraPrintPlanBasicOperators.scala:69)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBasicOperators$$anonfun$quoteRelation$2.apply(RelationalAlgebraPrintPlanBasicOperators.scala:69)
[error]     at idb.lms.extensions.print.CodeGenIndent$class.withMoreIndent(CodeGenIndent.scala:64)
[error]     at idb.syntax.iql.TestUtil$.withMoreIndent(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBasicOperators$class.quoteRelation(RelationalAlgebraPrintPlanBasicOperators.scala:69)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanAggregationOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanAggregationOperators$class.quoteRelation(RelationalAlgebraPrintPlanAggregationOperators.scala:136)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanSetTheoryOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanSetTheoryOperators$class.quoteRelation(RelationalAlgebraPrintPlanSetTheoryOperators.scala:85)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanRecursiveOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanRecursiveOperators$class.quoteRelation(RelationalAlgebraPrintPlanRecursiveOperators.scala:74)
[error]     at idb.syntax.iql.TestUtil$.quoteRelation(TestUtil.scala:43)
[error]     at idb.syntax.iql.TestUtil$.assertEqualStructure(TestUtil.scala:52)
[error]     at idb.syntax.iql.TestBasicClauses1.testSelection1ProjectTupleFun(TestBasicClauses1.scala:158)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses1.testSelection1FunCall failed: assertion failed: already defined: List(TP(Sym(303),StringPlus(Sym(299),Sym(298))), TP(Sym(304),Field(Sym(300),firstName,java.lang.String)), TP(Sym(305),Lambda(<function1>,UnboxedTuple(List(Sym(297), Sym(298))),Block(Sym(303)))), TP(Sym(306),Equal(Sym(304),Const(Sally)))) for List(TP(Sym(303),StringPlus(Sym(299),Sym(298))), TP(Sym(304),Field(Sym(300),firstName,java.lang.String)), TP(Sym(305),Lambda(<function1>,UnboxedTuple(List(Sym(297), Sym(298))),Block(Sym(303)))), TP(Sym(306),Equal(Sym(304),Const(Sally))), TP(Sym(333),Lambda(<function1>,Sym(323),Block(Sym(326)))), TP(Sym(334),Tuple2Access1(Sym(331))), TP(Sym(335),Lambda(<function1>,Sym(321),Block(Sym(328)))))
[error] Test idb.syntax.iql.TestBasicClauses1.testProject1TupleFun failed: scala.MatchError: TP(Sym(329),Lambda(<function1>,Sym(321),Block(Sym(328)))) (of class scala.virtualization.lms.internal.Expressions$TP)
[error]     at scala.PartialFunction$$anon$1.apply(PartialFunction.scala:248)
[error]     at scala.PartialFunction$$anon$1.apply(PartialFunction.scala:246)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$getFirstEquivalentDefinitionExp$1.applyOrElse(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$getFirstEquivalentDefinitionExp$1.applyOrElse(BaseExpAlphaEquivalence.scala:138)
[error]     at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:33)
[error]     at scala.collection.TraversableOnce$$anonfun$collectFirst$1.apply(TraversableOnce.scala:133)
[error]     at scala.collection.TraversableOnce$$anonfun$collectFirst$1.apply(TraversableOnce.scala:131)
[error]     at scala.collection.Iterator$class.foreach(Iterator.scala:727)
[error]     at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
[error]     at scala.collection.TraversableOnce$class.collectFirst(TraversableOnce.scala:131)
[error]     at scala.collection.AbstractTraversable.collectFirst(Traversable.scala:105)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.getFirstEquivalentDefinitionExp(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.syntax.iql.IR$.getFirstEquivalentDefinitionExp(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:123)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.SELECT$.apply(SELECT.scala:52)
[error]     at idb.syntax.iql.TestBasicClauses1.testProject1TupleFun(TestBasicClauses1.scala:74)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses1.testSelection1 failed: java.lang.IllegalArgumentException: Sym(380) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:78)
[error]     at idb.syntax.iql.package$.plan(package.scala:85)
[error]     at idb.syntax.iql.TestBasicClauses1.testSelection1(TestBasicClauses1.scala:86)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses1.testProject1 failed: expected:<    projection(
[error]         extent1014325634: Extent[idb.schema.university.Student][ref=QueryExtent(idb.BagExtent@3c756182,false,false,false)],
[error] 
[error]     )[ref=Sym(438)]> but was:<    projection(
[error]         extent1014325634: Extent[idb.schema.university.Student][ref=QueryExtent(idb.BagExtent@3c756182,false,false,false)],
[error]         (x149: idb.schema.university.Student): java.lang.String => {
[error]             val x150 = x149.lastName
[error]             x150
[error]         }
[error]     )[ref=Sym(422)]>
[info] Test idb.syntax.iql.TestBasicClauses1.testSelection1NegateMultiplePositive ignored
[error] Test idb.syntax.iql.TestBasicClauses1.testSelection1ProjectTupleDirect failed: java.lang.IllegalArgumentException: Sym(462) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:78)
[error]     at idb.syntax.iql.package$.plan(package.scala:85)
[error]     at idb.syntax.iql.TestBasicClauses1.testSelection1ProjectTupleDirect(TestBasicClauses1.scala:173)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selections1stAnd2ndInterleaved failed: java.util.NoSuchElementException: None.get
[error]     at scala.None$.get(Option.scala:313)
[error]     at scala.None$.get(Option.scala:311)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.getFirstEquivalentDefinitionExp(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.syntax.iql.IR$.getFirstEquivalentDefinitionExp(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:123)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:65)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:43)
[error]     at idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selections1stAnd2ndInterleaved(TestBasicClauses2.scala:188)
[error]     ...
[info] Test idb.syntax.iql.TestBasicClauses2.testJoin2 ignored
[error] Test idb.syntax.iql.TestBasicClauses2.testGroup1 failed: expected:<grouping(
[error]         crossProduct(
[error]             extent1014325634: Extent[idb.schema.university.Student][ref=QueryExtent(idb.BagExtent@3c756182,false,false,false)],
[error]                 extent194567347: Extent[idb.schema.university.Course][ref=QueryExtent(idb.BagExtent@b98dcb3,false,true,false)]
[error]             )[ref=Sym(63)],
[error] 
[error]         )[ref=Sym(268)]> but was:<        grouping(
[error]             crossProduct(
[error]                 extent1014325634: Extent[idb.schema.university.Student][ref=QueryExtent(idb.BagExtent@3c756182,false,false,false)],
[error]                 extent194567347: Extent[idb.schema.university.Course][ref=QueryExtent(idb.BagExtent@b98dcb3,false,true,false)]
[error]             )[ref=Sym(63)],
[error]             ((x48:idb.schema.university.Student,x49:idb.schema.university.Course): java.lang.String => {
[error]                 x56
[error]             }
[error]         )[ref=Sym(64)]>
[error] Test idb.syntax.iql.TestBasicClauses2.testJoin2Projection failed: java.util.NoSuchElementException: None.get
[error]     at scala.None$.get(Option.scala:313)
[error]     at scala.None$.get(Option.scala:311)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.getFirstEquivalentDefinitionExp(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.syntax.iql.IR$.getFirstEquivalentDefinitionExp(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:123)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at scala.virtualization.lms.common.TupledFunctions$class.fun(Functions.scala:29)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.FromClause2.WHERE(FromClause2.scala:25)
[error]     at idb.syntax.iql.TestBasicClauses2.testJoin2Projection(TestBasicClauses2.scala:268)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection2nd failed: scala.MatchError: TP(Sym(9),Lambda(<function1>,UnboxedTuple(List(Sym(7), Sym(8))),Block(UnboxedTuple(List(Sym(7), Sym(8)))))) (of class scala.virtualization.lms.internal.Expressions$TP)
[error]     at scala.PartialFunction$$anon$1.apply(PartialFunction.scala:248)
[error]     at scala.PartialFunction$$anon$1.apply(PartialFunction.scala:246)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$getFirstEquivalentDefinitionExp$1.applyOrElse(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$getFirstEquivalentDefinitionExp$1.applyOrElse(BaseExpAlphaEquivalence.scala:138)
[error]     at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:33)
[error]     at scala.collection.TraversableOnce$$anonfun$collectFirst$1.apply(TraversableOnce.scala:133)
[error]     at scala.collection.TraversableOnce$$anonfun$collectFirst$1.apply(TraversableOnce.scala:131)
[error]     at scala.collection.Iterator$class.foreach(Iterator.scala:727)
[error]     at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
[error]     at scala.collection.TraversableOnce$class.collectFirst(TraversableOnce.scala:131)
[error]     at scala.collection.AbstractTraversable.collectFirst(Traversable.scala:105)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.getFirstEquivalentDefinitionExp(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.syntax.iql.IR$.getFirstEquivalentDefinitionExp(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:123)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:65)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:43)
[error]     at idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection2nd(TestBasicClauses2.scala:142)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses2.testJoin2SelectionBoth failed: java.lang.IllegalArgumentException: Sym(416) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:141)
[error]     at idb.syntax.iql.package$.plan(package.scala:130)
[error]     at idb.syntax.iql.TestBasicClauses2.testJoin2SelectionBoth(TestBasicClauses2.scala:297)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection1st failed: java.lang.IllegalArgumentException: Sym(441) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:141)
[error]     at idb.syntax.iql.package$.plan(package.scala:130)
[error]     at idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection1st(TestBasicClauses2.scala:118)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses2.testDistinctExtents failed: expected:<    duplicateElimination(
[error]         crossProduct(
[error]             extent1014325634: Extent[idb.schema.university.Student][ref=QueryExtent(idb.BagExtent@3c756182,false,false,false)],
[error]             extent1972609397: Extent[idb.schema.university.Registration][ref=QueryExtent(idb.BagExtent@7593a175,false,false,false)]
[error]         )[ref=Sym(73)]
[error]     )[ref=Sym(469)]> but was:<    duplicateElimination(
[error]         projection(
[error]             crossProduct(
[error]                 extent1014325634: Extent[idb.schema.university.Student][ref=QueryExtent(idb.BagExtent@3c756182,false,false,false)],
[error]                 extent1972609397: Extent[idb.schema.university.Registration][ref=QueryExtent(idb.BagExtent@7593a175,false,false,false)]
[error]             )[ref=Sym(73)],
[error] 
[error]         )[ref=Sym(467)]
[error]     )[ref=Sym(468)]>
[error] Test idb.syntax.iql.TestBasicClauses2.testCrossProduct2WithProjection failed: assertion failed: already defined: List(TP(Sym(419),Lambda(<function1>,UnboxedTuple(List(Sym(399), Sym(400))),Block(Sym(415)))), TP(Sym(422),Projection(QueryExtent(idb.BagExtent@3c756182,false,false,false),Sym(151))), TP(Sym(423),NumericPlus(Sym(421),Const(1))), TP(Sym(424),Lambda(<function1>,UnboxedTuple(List(Sym(420), Sym(421))),Block(Sym(423)))), TP(Sym(438),Projection(QueryExtent(idb.BagExtent@3c756182,false,false,false),Sym(428))), TP(Sym(439),Field(Sym(436),firstName,java.lang.String)), TP(Sym(440),Equal(Sym(439),Const(Sally))), TP(Sym(441),Lambda(<function1>,UnboxedTuple(List(Sym(436), Sym(437))),Block(Sym(440))))) for List(TP(Sym(419),Lambda(<function1>,UnboxedTuple(List(Sym(399), Sym(400))),Block(Sym(415)))), TP(Sym(422),Projection(QueryExtent(idb.BagExtent@3c756182,false,false,false),Sym(151))), TP(Sym(423),NumericPlus(Sym(421),Const(1))), TP(Sym(424),Lambda(<function1>,UnboxedTuple(List(Sym(420), Sym(421))),Block(Sym(423)))), TP(Sym(438),Projection(QueryExtent(idb.BagExtent@3c756182,false,false,false),Sym(428))), TP(Sym(439),Field(Sym(436),firstName,java.lang.String)), TP(Sym(440),Equal(Sym(439),Const(Sally))), TP(Sym(441),Lambda(<function1>,UnboxedTuple(List(Sym(436), Sym(437))),Block(Sym(440)))), TP(Sym(476),Lambda(<function1>,UnboxedTuple(List(Sym(470), Sym(471))),Block(Sym(474)))))
[error] Test idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection1stAnd2ndCompared failed: java.lang.IllegalArgumentException: Sym(487) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:141)
[error]     at idb.syntax.iql.package$.plan(package.scala:130)
[error]     at idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection1stAnd2ndCompared(TestBasicClauses2.scala:211)
[error]     ...
[error] Test idb.syntax.iql.TestBasicClauses2.testCrossProduct2Selection1stAnd2nd failed: assertion failed: already defined: List(TP(Sym(484),Field(Sym(482),firstName,java.lang.String)), TP(Sym(485),Field(Sym(483),title,java.lang.String)), TP(Sym(486),NotEqual(Sym(484),Sym(485))), TP(Sym(487),Lambda(<function1>,UnboxedTuple(List(Sym(482), Sym(483))),Block(Sym(486)))), TP(Sym(497),ETuple2(Sym(495),Sym(496)))) for List(TP(Sym(484),Field(Sym(482),firstName,java.lang.String)), TP(Sym(485),Field(Sym(483),title,java.lang.String)), TP(Sym(486),NotEqual(Sym(484),Sym(485))), TP(Sym(487),Lambda(<function1>,UnboxedTuple(List(Sym(482), Sym(483))),Block(Sym(486)))), TP(Sym(497),ETuple2(Sym(495),Sym(496))), TP(Sym(500),Lambda(<function1>,UnboxedTuple(List(Sym(495), Sym(496))),Block(Sym(90)))), TP(Sym(501),Field(Sym(498),firstName,java.lang.String)), TP(Sym(502),Equal(Sym(501),Const(Sally))), TP(Sym(503),Field(Sym(499),title,java.lang.String)), TP(Sym(504),StringStartsWith(Sym(503),Const(Introduction))), TP(Sym(505),BooleanAnd(Sym(502),Sym(504))))
[error] Test idb.syntax.iql.TestBasicClauses2.testJoin2SelectionBothAndCompare failed: java.util.NoSuchElementException: None.get
[error]     at scala.None$.get(Option.scala:313)
[error]     at scala.None$.get(Option.scala:311)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.getFirstEquivalentDefinitionExp(BaseExpAlphaEquivalence.scala:138)
[error]     at idb.syntax.iql.IR$.getFirstEquivalentDefinitionExp(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:123)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$$anonfun$1.apply(BaseExpAlphaEquivalence.scala:121)
[error]     at scala.virtualization.lms.internal.Expressions$class.reifySubGraph(Expressions.scala:129)
[error]     at idb.syntax.iql.IR$.reifySubGraph(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.BaseExpAlphaEquivalence$class.createOrFindEquivalent(BaseExpAlphaEquivalence.scala:121)
[error]     at idb.syntax.iql.IR$.createOrFindEquivalent(IR.scala:53)
[error]     at idb.lms.extensions.equivalence.FunctionsExpDefAlphaEquivalence$class.doLambda(FunctionsExpDefAlphaEquivalence.scala:48)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at idb.syntax.iql.IR$.doLambda(IR.scala:53)
[error]     at scala.virtualization.lms.common.Functions$class.fun(Functions.scala:14)
[error]     at idb.syntax.iql.IR$.fun(IR.scala:53)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:65)
[error]     at idb.syntax.iql.impl.SelectClauseStar.FROM(SelectClauseStar.scala:43)
[error]     at idb.syntax.iql.TestBasicClauses2.testJoin2SelectionBothAndCompare(TestBasicClauses2.scala:327)
[error]     ...
[error] Test idb.syntax.iql.TestAggregateClauses1.testAggregateGroupWithWhere failed: java.lang.IllegalArgumentException: Sym(120) is not a Lambda function
[error]     at idb.algebra.normalization.RelationalAlgebraIRNormalizeSubQueries$class.selection(RelationalAlgebraIRNormalizeSubQueries.scala:106)
[error]     at idb.syntax.iql.IR$.selection(IR.scala:53)
[error]     at idb.syntax.iql.planning.ClauseToAlgebra$.apply(ClauseToAlgebra.scala:94)
[error]     at idb.syntax.iql.package$.plan(package.scala:85)
[error]     at idb.syntax.iql.TestAggregateClauses1.testAggregateGroupWithWhere(TestAggregateClauses1.scala:169)
[error]     ...
[error] Test idb.syntax.iql.TestAggregateClauses1.testAggregateSumCreditPoints failed: assertion failed: already defined: List(TP(Sym(200),Field(Sym(195),creditPoints,Int)), TP(Sym(199),Equal(Sym(194),Sym(196))), TP(Sym(201),NumericMinus(Sym(198),Sym(200))), TP(Sym(202),Lambda(<function1>,Sym(193),Block(Sym(199)))), TP(Sym(203),Field(Sym(197),creditPoints,Int))) for List(TP(Sym(200),Field(Sym(195),creditPoints,Int)), TP(Sym(199),Equal(Sym(194),Sym(196))), TP(Sym(201),NumericMinus(Sym(198),Sym(200))), TP(Sym(202),Lambda(<function1>,Sym(193),Block(Sym(199)))), TP(Sym(203),Field(Sym(197),creditPoints,Int)), TP(Sym(204),NumericPlus(Sym(201),Sym(203))))
[error] Test idb.syntax.iql.TestAggregateClauses1.testAggregateGroup1 failed: java.lang.IllegalArgumentException: Unknown relation: Sym(227)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBase$class.quoteRelation(RelationalAlgebraPrintPlanBase.scala:68)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanBasicOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanBasicOperators$class.quoteRelation(RelationalAlgebraPrintPlanBasicOperators.scala:124)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanAggregationOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanAggregationOperators$class.quoteRelation(RelationalAlgebraPrintPlanAggregationOperators.scala:136)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanSetTheoryOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanSetTheoryOperators$class.quoteRelation(RelationalAlgebraPrintPlanSetTheoryOperators.scala:85)
[error]     at idb.syntax.iql.TestUtil$.idb$algebra$print$RelationalAlgebraPrintPlanRecursiveOperators$$super$quoteRelation(TestUtil.scala:43)
[error]     at idb.algebra.print.RelationalAlgebraPrintPlanRecursiveOperators$class.quoteRelation(RelationalAlgebraPrintPlanRecursiveOperators.scala:74)
[error]     at idb.syntax.iql.TestUtil$.quoteRelation(TestUtil.scala:43)
[error]     at idb.syntax.iql.TestUtil$.assertEqualStructure(TestUtil.scala:53)
[error]     at idb.syntax.iql.TestAggregateClauses1.testAggregateGroup1(TestAggregateClauses1.scala:110)
[error]     ...
[info] Test idb.syntax.iql.TestAggregateClauses1.testAggregateGroupCountStarWithGroupWithWhere ignored
[info] Test idb.syntax.iql.TestAggregateClauses1.testAggregateGroupCountStarWithGroup ignored
[info] Test idb.syntax.iql.TestAggregateClauses1.testAggregateSumMatriulationNumberWithGroup ignored
[error] Test idb.syntax.iql.TestAggregateClauses1.testAggregateCountStudentNames failed: assertion failed: already defined: List(TP(Sym(385),Lambda(<function1>,Sym(372),Block(Sym(377)))), TP(Sym(389),Lambda(<function1>,UnboxedTuple(List(Sym(384), Sym(386), Sym(388))),Block(Sym(388)))), TP(Sym(377),Equal(Sym(374),Const(Sally))), TP(Sym(380),Lambda(<function1>,Sym(372),Block(Sym(377)))), TP(Sym(396),Lambda(<function1>,UnboxedTuple(List(Sym(384), Sym(386), Sym(388))),Block(Sym(388))))) for List(TP(Sym(341),Field(Sym(338),courseNumber,Int)), TP(Sym(342),Lambda(<function1>,UnboxedTuple(List(Sym(331), Sym(332))),Block(Sym(340)))), TP(Sym(337),Tuple2Access1(Sym(331))), TP(Sym(346),Field(Sym(343),firstName,java.lang.String)), TP(Sym(344),Grouping(QueryExtent(idb.BagExtent@3c756182,false,false,false),Sym(329))), TP(Sym(345),Field(Sym(339),number,Int)), TP(Sym(347),Field(Sym(343),lastName,java.lang.String)), TP(Sym(348),Equal(Sym(341),Sym(345))), TP(Sym(350),Lambda(<function1>,UnboxedTuple(List(Sym(338), Sym(339))),Block(Sym(348)))), TP(Sym(351),Lambda(<function1>,UnboxedTuple(List(Sym(331), Sym(332))),Block(Sym(340)))), TP(Sym(349),Projection(Sym(344),Sym(305))), TP(Sym(352),ETuple2(Sym(346),Sym(347))), TP(Sym(353),Lambda(<function1>,Sym(343),Block(Sym(352)))), TP(Sym(385),Lambda(<function1>,Sym(372),Block(Sym(377)))), TP(Sym(389),Lambda(<function1>,UnboxedTuple(List(Sym(384), Sym(386), Sym(388))),Block(Sym(388)))), TP(Sym(377),Equal(Sym(374),Const(Sally))), TP(Sym(380),Lambda(<function1>,Sym(372),Block(Sym(377)))), TP(Sym(396),Lambda(<function1>,UnboxedTuple(List(Sym(384), Sym(386), Sym(388))),Block(Sym(388)))), TP(Sym(426),Lambda(<function1>,UnboxedTuple(List(Sym(420), Sym(421))),Block(Sym(423)))), TP(Sym(427),Field(Sym(425),lastName,java.lang.String)), TP(Sym(428),Lambda(<function1>,Sym(425),Block(Sym(427)))), TP(Sym(435),NumericMinus(Sym(434),Const(1))))
[error] Test idb.syntax.iql.TestAggregateClauses1.testAggregateGroupCountWithGroup failed: assertion failed: already defined: List(TP(Sym(509),Lambda(<function1>,UnboxedTuple(List(Sym(507), Sym(508))),Block(UnboxedTuple(List(Sym(507), Sym(508))))))) for List(TP(Sym(509),Lambda(<function1>,UnboxedTuple(List(Sym(507), Sym(508))),Block(UnboxedTuple(List(Sym(507), Sym(508)))))))
[error] Failed: Total 69, Failed 36, Errors 0, Passed 8, Skipped 25
[error] Failed tests:
[error] 	idb.syntax.iql.TestExistsClauses1
[error] 	idb.syntax.iql.TestBasicClauses2
[error] 	idb.syntax.iql.TestBasicClauses3
[error] 	idb.syntax.iql.TestAggregateClauses2
[error] 	idb.syntax.iql.TestAggregateClauses1
[error] 	idb.syntax.iql.TestBasicClauses1
[error] (idb-runtime-compiler/test:test) sbt.TestsFailedException: Tests unsuccessful
[error] (idb-syntax-iql/test:test) sbt.TestsFailedException: Tests unsuccessful
[error] Total time: 8 s, completed 03.10.2013 23:50:44
