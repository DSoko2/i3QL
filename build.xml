<?xml version="1.0" encoding="UTF-8"?>
<!--
License (BSD Style License):
Copyright (c) 2010
Software Engineering
Department of Computer Science
Technische Universität Darmstadt
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
- Neither the name of the Software Technology Group or Technische 
  Universität Darmstadt nor the names of its contributors may be used to 
  endorse or promote products derived from this software without specific 
  prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.	

Author 		Michael Eichberg (mail@michael-eichberg.de)
-->
<project name="SAE" default="default" basedir=".">
	<description>Builds the SAE.</description>

	<!--
		Read user properties from build.properties.
	-->
	<property file="../build.properties" />

	<!-- General properties -->
	<property name="version" value="0.1.2" />


	<!-- Directories which contain the project's source files. -->
	<property name="src.main.dir" value="src" />
	<property name="src.benchmarks.dir" value="benchmarks" />


	<!-- Directories where the generated code is stored. -->
	<property name="build.dir" value="build" />
	<property name="class.dir" value="${build.dir}/class" />
	<property name="generated.dir" value="${build.dir}/src" />
	<property name="javadoc.dir" value="${build.dir}/doc" />

	<!-- Libraries & tools used at compile- and or run-time. -->
	<property name="lib.dir" value="lib" />


	<!-- Configuration of the "path"s. -->
	<path id="project.classpath">
		<pathelement location="${class.dir}" />
	</path>


	<macrodef name="compile-benchmark">
		<attribute name="benchmark" />
		<sequential>
			<mkdir dir="${generated.dir}/java/benchmarks/@{benchmark}" />
			<mkdir dir="${build.dir}/bin/class/benchmarks/@{benchmark}" />

			<exec executable="swipl">
				<arg value="-q" />
				<arg value="-f" />
				<arg value="src/compiler/Compiler.pl" />
				<arg value="-t" />
				<arg value="compile('benchmarks/@{benchmark}.pl','build/src/java/benchmarks/@{benchmark}/')." />
			</exec>

			<javac verbose="no" includeAntRuntime="false" srcdir="build/src/java/benchmarks/@{benchmark}/" destdir="${build.dir}/bin/class/benchmarks/@{benchmark}" source="1.6">
				<classpath>
					<pathelement path="${build.dir}/bin/class/runtime" />
				</classpath>
				<include name="**/*.java" />
			</javac>
			
			<javac verbose="no" includeAntRuntime="false" srcdir="benchmarks" destdir="${build.dir}/bin/class/benchmarks/@{benchmark}" source="1.6">
				<classpath>
					<pathelement path="${build.dir}/bin/class/runtime" />
					<pathelement path="${build.dir}/bin/class/benchmarks/@{benchmark}" />
				</classpath>
				<include name="@{benchmark}.java" />
				<include name="Utils.java" />
			</javac>
			
		</sequential>
	</macrodef>

	<macrodef name="run-benchmark">
		<attribute name="benchmark" />
		<sequential>
			<java fork="yes" classname="@{benchmark}">
				<classpath>
					<pathelement path="${build.dir}/bin/class/runtime" />
					<pathelement path="${build.dir}/bin/class/benchmarks/@{benchmark}" />
				</classpath>
			</java>
		</sequential>
	</macrodef>

	<!-- Definition of all targets. -->


	<target name="init" description="Creates the initial directory structure where the generated / compiled files are stored.">
		<tstamp />		
		<mkdir dir="${javadoc.dir}" />
		<mkdir dir="${generated.dir}" />
	</target>

	<target name="clean" description="Cleans up all artifacts that can be regenerated.">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile" description="Compiles the SAE Runtime Environment." depends="init">
		<mkdir dir="${build.dir}/bin/class/runtime" />
		<javac includeAntRuntime="false" srcdir="${src.main.dir}" destdir="${build.dir}/bin/class/runtime" excludes="saere/database/**" source="1.6" />
	</target>

	<target name="api-doc" depends="init" description="Generates SAE Prolog's API documentation.">
		<javadoc windowtitle="SAE Prolog" classpathref="project.classpath" destdir="${javadoc.dir}" locale="en_US" encoding="UTF-8" author="yes" doctitle="SAE Prolog - Runtime Environment ${version}">
			<fileset dir="${src.main.dir}" defaultexcludes="yes">
				<include name="saere/*.java" />
				<include name="saere/term/*.java" />
				<include name="saere/predicate/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="package" depends="compile" description="Packages the SAE.">
		<jar destfile="${build.dir}/bin/SAE-${version}.jar" basedir="${class.dir}" />
	</target>

	<target name="default" depends="package" description="Compiles and packages the SAE." />

	<target name="compile-benchmarks" depends="compile" description="Compiles all benchmarks.">
		<compile-benchmark benchmark="ancestor" />
		<compile-benchmark benchmark="arithmetic" />
		<compile-benchmark benchmark="chat_parser" />
		<compile-benchmark benchmark="crypt" />
		<compile-benchmark benchmark="einsteins_riddle" />
		<compile-benchmark benchmark="hanoi" />
		<compile-benchmark benchmark="meta_nrev" />
		<compile-benchmark benchmark="nrev" />
		<compile-benchmark benchmark="primes" />
		<compile-benchmark benchmark="qsort" />
		<compile-benchmark benchmark="queens" />
		<compile-benchmark benchmark="tak" />
		<compile-benchmark benchmark="zebra" />
	</target>

	<target name="run-qsort" depends="compile-benchmarks" description="Runs the qsort benchmark.">
		<run-benchmark benchmark="qsort" />
	</target>

	<target name="run-zebra" depends="compile-benchmarks" description="Runs the zebra benchmark.">
		<run-benchmark benchmark="zebra" />
	</target>

</project>
